# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
# Autoruns
exec --no-startup-id dunst
exec --no-startup-id "setxkbmap -layout fi"
exec --no-startup-id "compton --config ~/.config/compton.conf -b"
exec --no-startup-id "nitrogen --restore"
exec --no-startup-id dockd --daemon
exec --no-startup-id nm-applet
exec --no-startup-id volumeicon
exec xautolock -time 5 -locker '~/.local/bin/screenlock.sh'

# Set touchpad settings
set $touchpad `xinput | grep TouchPad | awk -F ' ' '{print $6}' | awk -F '=' '{print $2}'`
exec_always --no-startup-id xinput enable $touchpad
exec_always --no-startup-id xinput set-prop $touchpad 276 1 # Tap to click
exec_always --no-startup-id xinput set-prop $touchpad 284 1 # Natural scrolling

# Pulse Audio controls
set $sink `pacmd list-sinks | grep -e '*' | awk -F ' ' '{print $3}'`
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume $sink +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume $sink -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute $sink toggle # mute sound

# Screen brightness controls
# bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
# bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

# Media player controls
bindsym XF86AudioPlay exec mpc toggle
bindsym XF86AudioStop exec mpc stop
bindsym XF86AudioNext exec mpc next
bindsym XF86AudioPrev exec mpc prev

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 4
new_float pixel 4

# Hide borders
hide_edge_borders none

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:SpaceMono Nerd Font 14

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Big monitor screen settings
bindsym $mod+Shift+i exec ~/.screenlayout/dual.sh
bindsym $mod+Shift+u exec ~/.screenlayout/laptop.sh

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# Lock screen
bindsym $mod+Shift+x exec ~/.local/bin/screenlock.sh

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run

# Open Rofi
bindsym $mod+d exec "rofi -modi run,drun,window -show drun"
bindsym $mod+Ctrl+d exec "rofi -modi run,drun,window -show run"
bindsym $mod+Tab exec "rofi -modi run,drun,window -show window"
bindsym $mod+n exec --no-startup-id networkmanager_dmenu

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Restart dunst notifications
bindsym $mod+Shift+d --release exec "killall dunst; exec notify-send 'restart dunst'"

# Variables for workspaces
set $wsp1 1
set $wsp2 2
set $wsp3 3
set $wsp6 6
set $wsp10 10

# switch to workspace
bindsym $mod+1 workspace $wsp1
bindsym $mod+2 workspace $wsp2
bindsym $mod+3 workspace $wsp3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace $wsp6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace $wsp10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $wsp1
bindsym $mod+Shift+2 move container to workspace $wsp2
bindsym $mod+Shift+3 move container to workspace $wsp3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace $wsp6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace $wsp10

# Next and prev workspaces
bindsym Mod1+Right workspace next
bindsym Mod1+Left workspace prev

# Move window to next and prev workspaces
bindsym Mod1+Shift+Right move container to workspace next
bindsym Mod1+Shift+Left move container to workspace prev

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Window settings
floating_minimum_size 75 x 50
floating_maximum_size 1600 x 1200

for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

for_window [class="Skype"] floating enable
assign [class="Skype"] $wsp6
for_window [class="Keepassx2"] floating enable


# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

set $browser "Browser: [c]hrome   [f]irefox   [i]nox  [p]rivate window"
bindsym $mod+b mode $browser

mode $browser {
  bindsym c exec google-chrome-stable ; mode "default"
  bindsym f exec firefox ; mode "default"
  bindsym i exec inox ; mode "default"
  bindsym p exec firefox -private-window ; mode "default"
  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

# Colors set from ~/.Xresources
set_from_resource $background background
set_from_resource $foreground foreground
set_from_resource $color0     color0
set_from_resource $color1     color1
set_from_resource $color2     color2
set_from_resource $color3     color3
set_from_resource $color4     color4
set_from_resource $color5     color5
set_from_resource $color6     color6
set_from_resource $color7     color7
set_from_resource $color8     color8
set_from_resource $color9     color9
set_from_resource $color10    color10
set_from_resource $color11    color11
set_from_resource $color12    color12
set_from_resource $color13    color13
set_from_resource $color14    color14
set_from_resource $color15    color15
set_from_resource $bcolor     borderColor


# Window Colours
#                         border      background  text        indicator   child_border
client.focused            $foreground $background $foreground $foreground $foreground
client.focused_inactive   $foreground $background $foreground $color8     $color8
client.unfocused          $foreground $background $foreground $background $background
client.urgent             $foreground $background $foreground $color8     $color1
client.placeholder        $foreground $background $foreground $color8     $color8

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#      status_command i3status
#}

# Polybar launch script (located ~/.config/polybar/launch.sh)
exec_always --no-startup-id "polybar -c ~/.config/polybar/config main_bar"

# Assigning apps to workspaces
assign [class="Code"] $wsp2
assign [class="skype preview"] $wsp6
assign [title="ncmpcpp"] $wsp10
assign [title="vis"] $wsp10
assign [title="codeterminal"] $wsp2
assign [class="Google-chrome"] $wsp3

# Apps for workspaces
exec --no-startup-id "i3-msg 'workspace 2; append_layout ~/.config/i3/workspace-2.json'"
exec --no-startup-id "i3-msg 'workspace 10; append_layout ~/.config/i3/workspace-10.json'"

exec termite -t ncmpcpp -e ncmpcpp
exec termite -t vis -e vis 
exec termite -t codeterminal
# exec code
exec --no-startup-id "i3-msg 'workspace 1'"

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
gaps inner 10
gaps outer 10

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# for_window [class=^.*] floating enable
